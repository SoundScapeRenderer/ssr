## This file will be processed by automake (which is called by autogen.sh) to
## generate Makefile.in, which in turn will be processed by configure to
## generate Makefile.

## comments starting with a single # are copied to Makefile.in (and afterwards
## to Makefile), comments with ## are dropped.

SUBDIRS = src man data browser-gui

## only entered for "make dist", "make distclean" and "make maintainer-clean":
##DIST_SUBDIRS = $(SUBDIRS) another_dir

# user manual in Sphinx build directory (not distributed)
SSR_MANUAL_ORIG = $(srcdir)/doc/manual/_build/latex/SoundScapeRenderer.pdf
# distributed version of the user manual
SSR_MANUAL_DIST = doc/SoundScapeRenderer-@PACKAGE_VERSION@-manual.pdf

dist_doc_DATA = AUTHORS COPYING $(SSR_MANUAL_DIST) NEWS

# files which should be distributed but not installed
dist_noinst_DATA = \
	INSTALL README \
	doc/manual/Makefile \
	doc/manual/conf.py \
	doc/manual/gui.rst \
	doc/manual/general.rst \
	doc/manual/renderers.rst \
	doc/manual/index.rst \
	doc/manual/network.rst \
	doc/manual/operation.rst \
	doc/manual/images/signal_processing.png \
	doc/manual/images/coordinate_system.png \
	doc/manual/images/anti_aliasing.png \
	doc/manual/images/screenshot_vlc.png \
	doc/manual/images/ssr_logo_mac_30px.png \
	doc/manual/images/screenshot_spd.png \
	doc/manual/images/screenshot.png \
	doc/manual/images/distance_attenuation.png \
	doc/manual/images/hrir_comp_filters.png \
	mex/README.md \
	mex/COPYING \
	mex/DESCRIPTION \
	mex/Makefile \
	mex/ssr_mex.h \
	mex/ssr_aap.cpp \
	mex/ssr_binaural.cpp \
	mex/ssr_brs.cpp \
	mex/ssr_dca.cpp \
	mex/ssr_generic.cpp \
	mex/ssr_vbap.cpp \
	mex/ssr_wfs.cpp \
	mex/ssr_helper.m \
	mex/test_ssr.m \
	flext/README.md \
	flext/Makefile \
	flext/package.txt \
	flext/ssr_flext.h \
	flext/ssr_aap.cpp \
	flext/ssr_binaural.cpp \
	flext/ssr_dca.cpp \
	flext/ssr_vbap.cpp \
	flext/ssr_wfs.cpp \
	flext/ssr_messages.pd \
	flext/ssr_aap~-help.pd \
	flext/ssr_binaural~-help.pd \
	flext/ssr_dca~-help.pd \
	flext/ssr_vbap~-help.pd \
	flext/ssr_wfs~-help.pd \
	flext/virtual_aap.pd \
	flext/virtual_dca.pd \
	flext/virtual_vbap.pd \
	flext/virtual_wfs.pd \
	flext/8channels.asd \
	flext/circle.asd \
	flext/hrirs_fabian.wav \
	flext/hrirs_fabian_min_phase_eq.wav \
	flext/hrirs_kemar.wav \
	flext/hrirs_kemar_min_phase_eq.wav \
	flext/wfs_prefilter_120_1500_44100.wav \
	pd/README.md \
	pd/ssrclient.pd \
	pd/slaxml.lua \
	pd/legacy_ssrclient-help.pd \
	pd/legacy_ssrclient.pd_lua

dist_noinst_SCRIPTS = flext/startpd.sh

# these files are deleted on "make maintainer-clean":
MAINTAINERCLEANFILES = aclocal.m4 stamp-h.in \
                       config.log config.cache config.status

DISTCLEANFILES = $(SSR_MANUAL_DIST)

## TODO: find a way to actually use this location (see autogen.sh)
## # where we keep local rules for automake
## ACLOCAL_M4 = autotools/aclocal.m4

# checks for m4 macros in the directory "autotools/m4/"
## see AC_CONFIG_MACRO_DIR in configure.ac
ACLOCAL_AMFLAGS = -I autotools/m4

# just a quick reminder:
#
# $@ stands for the target,
# $* the part wich is identical on the target and on the prerequisite,
# $< the prerequisite which caused the rule to apply,
# $^ all prerequisites (duplicates removed),
# $+ all prerequisites (including duplicates),
# $? gives the names of the prerequisites which are newer than the target
# $(@D) only the directory part, $(@F) only the file part

# copy and rename (include version) the user manual on "make dist".
# $(SSR_MANUAL_DIST) has to be in dist_doc_DATA!
# If the PDF file doesn't exist, an empty dummy file is created!
$(SSR_MANUAL_DIST): $(SSR_MANUAL_ORIG)
	@test -f "$<" && cp "$<" "$@" \
		|| $(MKDIR_P) "$$(dirname "$@")" && touch "$@"

# show warning message (if missing), the file must be created by the maintainer:
$(SSR_MANUAL_ORIG):
	@test -f "$@" || echo "Warning: $@ is not generated by the Makefile!"

doc:
	$(MAKE) -C src $@

.PHONY: doc

if ENABLE_APP_BUNDLE
dmg: install
	$(MAKE) -C data/MacOSX $@
else
dmg:
	@echo "You have to run './configure --enable-app-bundle' first!"; false
endif
.PHONY: dmg

.NOTPARALLEL: install

# remove pkgdatadir and docdir (if empty)
uninstall-hook:
	-rmdir $(DESTDIR)$(pkgdatadir)
	-rmdir $(DESTDIR)$(docdir)
